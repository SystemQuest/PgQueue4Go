version: '3'

# Global variables
vars:
  POSTGRES_URL: postgres://postgres:password@localhost:5432/pgqueue_test?sslmode=disable

# Task definitions
tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list

  dev:
    desc: Start development environment
    deps: [db:start]
    cmds:
      - echo "Development environment ready"
      - echo "Database URL: {{.POSTGRES_URL}}"

  db:start:
    desc: Start PostgreSQL with Docker
    cmds:
      - docker run -d --name pgqueue-postgres -p 5432:5432 -e POSTGRES_PASSWORD=password -e POSTGRES_DB=pgqueue_test postgres:15-alpine
    status:
      - docker ps --filter name=pgqueue-postgres --filter status=running --quiet

  db:stop:
    desc: Stop PostgreSQL container
    cmds:
      - docker stop pgqueue-postgres || true
      - docker rm pgqueue-postgres || true

  db:reset:
    desc: Reset database
    deps: [db:stop, db:start]
    cmds:
      - sleep 2  # Wait for container to be ready

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  test:integration:
    desc: Run integration tests
    deps: [db:reset]
    cmds:
      - sleep 2  # Wait for database
      - go test -v ./... -tags=integration

  build:
    desc: Build CLI tool
    cmds:
      - go build -o bin/pgqueue ./cmd/pgqueue

  install:
    desc: Install CLI tool
    cmds:
      - go install ./cmd/pgqueue

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf bin/

  lint:
    desc: Run linter
    cmds:
      - golangci-lint run

  fmt:
    desc: Format code
    cmds:
      - go fmt ./...
      - goimports -w .

  deps:
    desc: Download dependencies
    cmds:
      - go mod download
      - go mod tidy