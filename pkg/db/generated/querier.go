// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package generated

import (
	"context"
)

type Querier interface {
	ClearQueue(ctx context.Context, dollar_1 []string) error
	ClearStatistics(ctx context.Context, dollar_1 []string) error
	DeleteJob(ctx context.Context, id int32) error
	DeleteJobs(ctx context.Context, dollar_1 []int32) error
	DeleteJobsForStats(ctx context.Context, dollar_1 []int32) ([]DeleteJobsForStatsRow, error)
	DequeueJobsAtomic(ctx context.Context, arg DequeueJobsAtomicParams) ([]DequeueJobsAtomicRow, error)
	DequeueJobsByEntrypoint(ctx context.Context, arg DequeueJobsByEntrypointParams) ([]PgqueueJobs, error)
	DequeueRetryJobsAtomic(ctx context.Context, arg DequeueRetryJobsAtomicParams) ([]DequeueRetryJobsAtomicRow, error)
	EnqueueJob(ctx context.Context, arg EnqueueJobParams) error
	EnqueueJobBatch(ctx context.Context, arg []EnqueueJobBatchParams) *EnqueueJobBatchBatchResults
	GetJob(ctx context.Context, id int32) (PgqueueJobs, error)
	GetQueueSize(ctx context.Context) ([]GetQueueSizeRow, error)
	GetRetryJobs(ctx context.Context, arg GetRetryJobsParams) ([]PgqueueJobs, error)
	GetSchemaVersion(ctx context.Context) (int32, error)
	GetStatistics(ctx context.Context, limit int32) ([]GetStatisticsRow, error)
	HasUpdatedColumn(ctx context.Context, arg HasUpdatedColumnParams) (bool, error)
	InsertJobStatistics(ctx context.Context, arg InsertJobStatisticsParams) error
	InsertSchemaVersion(ctx context.Context, arg InsertSchemaVersionParams) error
	MarkJobsAsPicked(ctx context.Context, dollar_1 []int32) error
	TruncateQueue(ctx context.Context) error
	TruncateStatistics(ctx context.Context) error
	UpdateJobStatus(ctx context.Context, arg UpdateJobStatusParams) error
}

var _ Querier = (*Queries)(nil)
